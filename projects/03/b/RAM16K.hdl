// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:

    Not(in=address[12],out=notaddress12);
    Not(in=address[13],out=notaddress13);

    And(a=notaddress13,b=notaddress12,out=ram0);
    And(a=notaddress13,b=address[12],out=ram1);
    And(a=address[13],b=notaddress12,out=ram2);
    And(a=address[13],b=address[12],out=ram3);

    And(a=ram0,b=load,out=select0);
    And(a=ram1,b=load,out=select1);
    And(a=ram2,b=load,out=select2);
    And(a=ram3,b=load,out=select3);

    RAM4K(in=in,load=select0,address=address[0..11],out=out0);
    RAM4K(in=in,load=select1,address=address[0..11],out=out1); 
    RAM4K(in=in,load=select2,address=address[0..11],out=out2); 
    RAM4K(in=in,load=select3,address=address[0..11],out=out3); 
    Mux4Way16(a=out0,b=out1,c=out2,d=out3,sel=address[12..13],out=out);
}
