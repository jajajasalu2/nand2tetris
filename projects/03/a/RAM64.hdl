// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:

    Not(in=address[5],out=notaddress5);
    Not(in=address[4],out=notaddress4);
    Not(in=address[3],out=notaddress3);
    Not(in=address[2],out=notaddress2);
    Not(in=address[1],out=notaddress1);
    Not(in=address[0],out=notaddress0);

    And(a=notaddress5,b=notaddress4,out=ndn5n4);
    And(a=notaddress5,b=address[4],out=ndn54);
    And(a=address[5],b=notaddress4,out=nd5n4);
    And(a=address[5],b=address[4],out=nd54);

    And(a=ndn5n4,b=notaddress3,out=ram0);
    And(a=ndn5n4,b=address[3],out=ram1);
    And(a=ndn54,b=notaddress3,out=ram2);
    And(a=ndn54,b=address[3],out=ram3);
    And(a=nd5n4,b=notaddress3,out=ram4);
    And(a=nd5n4,b=address[3],out=ram5);
    And(a=nd54,b=notaddress3,out=ram6);
    And(a=nd54,b=address[3],out=ram7);

    And(a=ram0,b=load,out=select0);
    And(a=ram1,b=load,out=select1);
    And(a=ram2,b=load,out=select2);
    And(a=ram3,b=load,out=select3);
    And(a=ram4,b=load,out=select4);
    And(a=ram5,b=load,out=select5);
    And(a=ram6,b=load,out=select6);
    And(a=ram7,b=load,out=select7);

    RAM8(in=in,load=select0,address=address[0..2],out=out0);
    RAM8(in=in,load=select1,address=address[0..2],out=out1); 
    RAM8(in=in,load=select2,address=address[0..2],out=out2); 
    RAM8(in=in,load=select3,address=address[0..2],out=out3); 
    RAM8(in=in,load=select4,address=address[0..2],out=out4); 
    RAM8(in=in,load=select5,address=address[0..2],out=out5); 
    RAM8(in=in,load=select6,address=address[0..2],out=out6); 
    RAM8(in=in,load=select7,address=address[0..2],out=out7); 

    Mux8Way16(a=out0,b=out1,c=out2,d=out3,e=out4,f=out5,g=out6,h=out7,sel=address[3..5],out=out);
}
